// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Expect ConfigureGame to be rendered correctly with default 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "rgb(108,92,231)",
      },
    ]
  }
>
  <RNCSafeAreaView
    edges={
      Array [
        "bottom",
      ]
    }
    style={
      Array [
        Object {
          "flexGrow": 1,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        Object {
          "backgroundColor": "transparent",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "justifyContent": "center",
          "width": 750,
        }
      }
    >
      <View
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 70,
          }
        }
      >
        <RNSVGSvgView
          align="xMinYMin"
          bbHeight="812"
          bbWidth={750}
          fill="none"
          focusable={false}
          height="812"
          meetOrSlice={1}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 812,
                "width": 750,
              },
            ]
          }
          vbHeight={812}
          vbWidth={375}
          width={750}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              d="M-757.5 612.5L-1210 243.5V948.5H459V264.5L112 673L-335.5 -76L-757.5 612.5Z"
              fill={4279510628}
              fillOpacity={0.3}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": 533.6,
            "width": 675,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <Text
          accessible={true}
          color="TERTIARY"
          style={
            Object {
              "color": "#142664",
              "fontSize": 32,
              "fontStyle": "normal",
              "fontWeight": "700",
            }
          }
          typography="H1"
        >
          configureTitle1
        </Text>
        <Text
          accessible={true}
          color="WHITE"
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 32,
              "fontStyle": "normal",
              "fontWeight": "700",
            }
          }
          typography="H1"
        >
          configureTitle2
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 4,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "paddingHorizontal": 20,
            "paddingVertical": 10,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgb(231, 231, 231)",
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
              },
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#FFFFFF",
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "bottom": 0,
                "height": 2,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "transform": Array [
                  Object {
                    "scaleY": 0.5,
                  },
                ],
                "zIndex": 1,
              }
            }
          />
          <View
            style={
              Array [
                Object {
                  "paddingBottom": 0,
                  "paddingTop": 0,
                },
                Object {
                  "minHeight": 64,
                },
              ]
            }
          >
            <View
              collapsable={false}
              pointerEvents="none"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "transform": Array [
                    Object {
                      "translateX": 3,
                    },
                  ],
                  "zIndex": 3,
                }
              }
            >
              <Text
                collapsable={false}
                maxFontSizeMultiplier={1.5}
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": undefined,
                    "left": 0,
                    "opacity": 0,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "position": "absolute",
                    "textAlign": "left",
                    "top": 34,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": -16,
                      },
                      Object {
                        "scale": 0.75,
                      },
                    ],
                    "writingDirection": "ltr",
                  }
                }
              >
                playerNameLabel
              </Text>
              <Text
                collapsable={false}
                maxFontSizeMultiplier={1.5}
                numberOfLines={1}
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": undefined,
                    "left": 0,
                    "opacity": 0,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "position": "absolute",
                    "textAlign": "left",
                    "top": 34,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": -16,
                      },
                      Object {
                        "scale": 0.75,
                      },
                    ],
                    "writingDirection": "ltr",
                  }
                }
              >
                playerNameLabel
              </Text>
            </View>
            <TextInput
              activeOutlineColor="#FFFFFF"
              autoCapitalize="none"
              editable={true}
              maxFontSizeMultiplier={1.5}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#FFFFFF"
              selectionColor="#FFFFFF"
              style={
                Array [
                  Object {
                    "flexGrow": 1,
                    "margin": 0,
                  },
                  Object {
                    "paddingLeft": 12,
                    "paddingRight": 12,
                  },
                  Object {
                    "height": 64,
                  },
                  Object {
                    "paddingBottom": 4,
                    "paddingTop": 24,
                  },
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": undefined,
                    "textAlign": "left",
                    "textAlignVertical": "center",
                  },
                  false,
                  Array [
                    Object {},
                  ],
                ]
              }
              testID="text-input-flat"
              underlineColorAndroid="transparent"
              value="defaultName"
            />
          </View>
        </View>
        <Text
          collapsable={false}
          maxFontSizeMultiplier={1.5}
          onLayout={[Function]}
          style={
            Object {
              "color": "#B00020",
              "fontFamily": "System",
              "fontSize": 12,
              "fontWeight": "400",
              "opacity": 0,
              "paddingHorizontal": 12,
              "paddingVertical": 4,
              "textAlign": "left",
              "transform": Array [],
              "writingDirection": "ltr",
            }
          }
        >
          playerNameErrorText
        </Text>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "paddingHorizontal": 20,
            "paddingVertical": 10,
          }
        }
      >
        <View
          style={
            Object {
              "paddingVertical": 10,
            }
          }
        >
          <Text
            accessible={true}
            color="WHITE"
            style={
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "700",
              }
            }
            typography="P1_BOLD"
          >
            difficultyLabel
          </Text>
        </View>
        <RNCSegmentedControl
          backgroundColor="rgba(0, 184, 147, 0.8)"
          enabled={true}
          onChange={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 32,
              },
              undefined,
            ]
          }
          tintColor="#FFFFFF"
          values={
            Array [
              "easy",
              "medium",
              "hard",
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "paddingHorizontal": 20,
            "paddingVertical": 10,
          }
        }
      >
        <View
          style={
            Object {
              "paddingVertical": 10,
            }
          }
        >
          <Text
            accessible={true}
            color="WHITE"
            style={
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "700",
              }
            }
            typography="P1_BOLD"
          >
            questionAmountLabel
          </Text>
        </View>
        <RNCSegmentedControl
          backgroundColor="rgba(0, 184, 147, 0.8)"
          enabled={true}
          onChange={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 32,
              },
              undefined,
            ]
          }
          tintColor="#FFFFFF"
          values={
            Array [
              "5",
              "10",
              "25",
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "justifyContent": "center",
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 10,
              "height": 56,
              "justifyContent": "center",
              "paddingVertical": 10,
              "width": "100%",
            },
            Object {
              "opacity": 1,
            },
          ]
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {},
            }
          }
          collapsable={false}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgb(0,184,148)",
              "borderRadius": 10,
              "height": 56,
              "justifyContent": "center",
              "paddingVertical": 10,
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
                Object {
                  "alignItems": "center",
                },
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
            typography="P1_BOLD"
          >
            getStartedLabel
          </Text>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;
